def Main():
  # Global parameters:
  global speed_ms    = 0.250
  global speed_rads  = 0.750
  global accel_mss   = 1.200
  global accel_radss = 1.200
  global blend_radius_m = 0.001
  global ref_frame = p[0,0,0,0,0,0]

  #--------------------------
  # Add any default subprograms here
  # For example, to drive a gripper as a program call:
  # def Gripper_Open():
  #   ...
  # end
  #
  # Example to drive a spray gun:
  def SprayOn(value):
    # use the value as an output:
    DO_SPRAY = 5
    if value == 0:
      set_standard_digital_out(DO_SPRAY, False)
    else:
      set_standard_digital_out(DO_SPRAY, True)
    end
  end

  # Example to drive an extruder:
  def Extruder(value):
    # use the value as an output:
    if value < 0:
      # stop extruder
    else:
      # start extruder
    end
  end

  # Example to move an external axis
  def MoveAxis(value):
    # use the value as an output:
    DO_AXIS_1 = 1
    DI_AXIS_1 = 1
    if value <= 0:
      set_standard_digital_out(DO_AXIS_1, False)

      # Wait for digital input to change state
      #while (get_standard_digital_in(DI_AXIS_1) != False):
      #  sync()
      #end
    else:
      set_standard_digital_out(DO_AXIS_1, True)

      # Wait for digital input to change state
      #while (get_standard_digital_in(DI_AXIS_1) != True):
      #  sync()
      #end
    end
  end
  #--------------------------


  # Main program:
  # Program generated by RoboDK v5.2.2 for UR10e on 25/04/2024 12:55:27
  # Using nominal kinematics.
  blend_radius_m = 0.001
  speed_ms    = 1.000
  ref_frame = p[0.159105, -0.951817, 0.066500, -1.583515, -0.914243, -1.583515]
  set_tcp(p[-0.000190, -0.010820, 0.439210, -0.614000, 0.614000, 1.482000])
  # Show Torch2
  movej([-1.073877, -2.593821, -0.316693, -2.432238, 1.073275, 2.555389],accel_radss,speed_rads,0,0)
  movel(pose_trans(ref_frame,p[0.010000, -0.095000, -0.097500, -1.062409, -1.296195, 1.062409]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 0.050
  movel(pose_trans(ref_frame,p[0.010000, -0.108818, -0.095391, -1.168910, -1.234507, 1.168910]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.122194, -0.091334, -1.015099, -1.321279, 1.015099]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.134855, -0.085412, -1.122143, -1.262508, 1.122143]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.146542, -0.077745, -1.227907, -1.197066, 1.227907]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.157018, -0.068491, -1.332211, -1.124769, 1.332211]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.166067, -0.057838, -1.181476, -1.226733, 1.181476]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.173506, -0.046004, -1.286448, -1.157480, 1.286448]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.179182, -0.033231, -1.389847, -1.081261, 1.389847]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.182979, -0.019779, -1.491457, -0.997861, 1.491457]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.184820, -0.005923, -1.344495, -1.115716, 1.344495]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.184668, 0.008054, -1.446921, -1.035508, 1.446921]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.182525, 0.021866, -1.547430, -0.947987, 1.547430]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.178434, 0.035232, -1.645761, -0.852907, 1.645761]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.172481, 0.047878, -1.741634, -0.749987, 1.741634]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.164786, 0.059547, -2.047821, -0.331693, 2.047821]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.155506, 0.069999, 1.704532, -0.791103, -1.704532]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.144831, 0.079023, 1.607662, -0.890931, -1.607662]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.132978, 0.086432, 1.508449, -0.983029, -1.508449]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.120191, 0.092076, 1.650649, -0.847916, -1.650649]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.106730, 0.095840, 1.560011, -0.936367, -1.560011]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.095000, 0.097500, 1.560011, -0.936367, -1.560011]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.095000, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.081400, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.072600, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.063800, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.055000, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 1.000
  movel(pose_trans(ref_frame,p[0.110000, -0.055000, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.114992, -0.049750, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.014992, -0.049750, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 0.050
  movel(pose_trans(ref_frame,p[0.021906, -0.048562, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.031320, -0.045227, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.039883, -0.040087, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.047255, -0.033348, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.053139, -0.025278, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.057303, -0.016200, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.059579, -0.006475, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.059877, 0.003508, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.058185, 0.013351, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.054570, 0.022661, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.049177, 0.031067, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.042220, 0.038234, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.033979, 0.043875, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.024780, 0.047766, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.014992, 0.049750, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 1.000
  movel(pose_trans(ref_frame,p[0.114992, 0.049750, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.110000, 0.055087, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.055087, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 0.050
  movel(pose_trans(ref_frame,p[0.010000, 0.068657, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.077437, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.086217, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.094997, 0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.095000, 0.097500, 1.838606, -0.634034, -1.838606]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.106730, 0.095840, 1.752845, -0.737226, -1.752845]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.120191, 0.092076, 1.657285, -0.841096, -1.657285]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.132978, 0.086432, 1.794072, -0.688886, -1.794072]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.144831, 0.079023, 1.699715, -0.796319, -1.699715]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.155506, 0.069999, 1.834720, -0.638935, -1.834720]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.164786, 0.059547, 1.741634, -0.749987, -1.741634]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.172481, 0.047878, 1.874757, -0.587341, -1.874757]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.178434, 0.035232, 1.783012, -0.702078, -1.783012]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.182525, 0.021866, 1.688324, -0.808544, -1.688324]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.184668, 0.008054, 1.823819, -0.652564, -1.823819]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.184820, -0.005923, 1.730384, -0.762633, -1.730384]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.182979, -0.019779, 1.864025, -0.601414, -1.864025]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.179182, -0.033231, 1.771911, -0.715152, -1.771911]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.173506, -0.046004, 1.676898, -0.820655, -1.676898]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.166067, -0.057838, 1.812874, -0.666074, -1.812874]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.157018, -0.068491, 1.719094, -0.775166, -1.719094]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.146542, -0.077745, 1.853246, -0.615367, -1.853246]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.134855, -0.085412, 1.760768, -0.728110, -1.760768]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.122194, -0.091334, 1.665433, -0.832657, -1.665433]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.108818, -0.095391, 1.801887, -0.679464, -1.801887]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.095000, -0.097500, 1.801887, -0.679464, -1.801887]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.094997, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.086217, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.077437, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.068657, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, 0.055087, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 1.000
  movel(pose_trans(ref_frame,p[0.110000, 0.055087, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.114992, 0.049750, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.014992, 0.049750, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 0.050
  movel(pose_trans(ref_frame,p[0.024780, 0.047766, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.033979, 0.043875, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.042220, 0.038234, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.049177, 0.031067, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.054570, 0.022661, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.058185, 0.013351, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.059877, 0.003508, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.059579, -0.006475, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.057303, -0.016200, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.053139, -0.025278, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.047255, -0.033348, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.039883, -0.040087, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.031320, -0.045227, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.021906, -0.048562, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.014992, -0.049750, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 1.000
  movel(pose_trans(ref_frame,p[0.114992, -0.049750, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.110000, -0.055000, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.055000, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 0.050
  movel(pose_trans(ref_frame,p[0.010000, -0.063800, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.072600, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.081400, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0.000)
  movel(pose_trans(ref_frame,p[0.010000, -0.095000, -0.097500, 1.926875, -0.516304, -1.926875]),accel_mss,speed_ms,0,0) # end trace
  speed_ms    = 1.000
  movel(pose_trans(ref_frame,p[0.110000, -0.095000, -0.097500, 1.702124, -0.793714, -1.702124]),accel_mss,speed_ms,0,0.000)
  # End of main program
end

Main()
